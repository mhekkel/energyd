Version 2.9.0

- Added some calls to xml::writer to write e.g. xml-decl and doctypes
- Support for non-intrusive serialization. The call to serialize is now
  done by the templated struct zeep::xml::struct_serializer. You can
  create a specialization for this struct to do something else than
  calling MyClass::serialize.
- A streaming input added, process_document_elements calls the callback
  for all elements that match a given xpath.
- ISO8859-1 support (finally)
- some xpath additions (matches e.g.)
- changed signature of various find routines to work with const char*
- changed authentication mechanism in webapp to allow multiple realms
- some small changes in writing out XML documents/xml::writer
- attributes are no longer sorted when parsing a document
- added line number to validation error messages
- process value tag of mrs:option tag
- el processing returns original string if it does not contain an expression
- in expression language, support var1[var2] constructs
- fix in writing doctype declaration
- insert/erase implementations of zeep::xml::node...
- fixed bug in el implementation (dividing numbers)

Version 2.8.2

- Fix in unicode support code
- Preliminary support for handling authentication

Version 2.8.1

- removed boost::ptr_vector/ptr_list.
- work around a crashing bug in el::object[string] when compiling with icpc

Version 2.8.0

- write_content added.
- nullptr instead of nil, added a stub for old compilers.
- fix in el::object (mixing up uint64 and size_t)

Version 2.6.3

- Fix for stack overflow in delete large XML documents

Version 2.6.2

- Apparently the word size has changed on amd64/GNUC targets. I've
  switched to a more robust template selection algorithm for WSDL
  generation.

Version 2.6.1

- Fix in keep-alive (clear reply object after each served reply)
- Implemented missing at() virtual method for el::vector
- Writing comments now validates output
- check mounted paths instead of only the root for handlers
- optimization flags in makefile

Version 2.6.0

- Changed parameter_map (for webapp) into a multimap

Version 2.5.2

- Throw exception when attempting to write null character.

Version 2.5.1
  
- Removed the use of split_iterator from webapp since it generated
  crashes when built as a shared library...

Version 2.5.0
  
- added webapp, a base class used to create web applications,
  it uses XHTML templates to fill in. It uses a script language
  to enable interaction with the C++ code.

Version 2.1.0

- support for HTTP/1.1
- added multiplication in xpath expression language... oops
- revised interface for container::iterator, now it is possible
  to use more STL and boost functions on a container directly, like:
  
  xml::container cnt = ...;
  foreach (node* n, cnt) { cout << n->name() << endl; }
